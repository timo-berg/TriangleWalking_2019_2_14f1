using System.Collections;
using System.Collections.Generic;
using UnityEngine;

public static class ConfigValues
{
    public static Vector3[] anchorPoints = {new Vector3( 2.7f, 0f, 1.5f), new Vector3(-1.7f, 0f, 1.5f)};
    public static float firstDistance = 4f;
    public static float[] secondDistances = {3f, 3.5f, 4f};
    public static float[,] anglePermutation = {
{-120,-90,-90,60,90,-60,-60,-150,60,120,-60,-150,150,-120,-120,-90,150,90,90,120,120,-150,60,150},
{-150,-120,-120,120,150,150,-60,60,90,-90,120,120,90,-150,-90,60,-60,-150,150,90,-60,-120,-90,60},
{120,-90,90,150,-150,120,60,60,-90,-60,120,150,-90,90,-120,-120,-120,60,-150,150,-150,90,-60,-60},
{-150,60,-90,90,150,60,150,-150,150,60,-120,120,120,-90,-60,-60,120,-120,-90,-60,-150,-120,90,90},
{-90,-90,-90,150,120,120,60,-60,-60,90,-150,-150,120,-120,90,-150,90,150,-120,60,60,-60,150,-120},
{150,120,120,-120,60,60,-60,-120,90,60,150,150,120,-60,-150,-150,90,-120,90,-150,-90,-90,-90,-60},
{90,-90,150,120,-60,-150,-90,90,-90,-150,-150,-60,-60,120,120,-120,-120,90,150,150,-120,60,60,60},
{-60,150,60,90,90,-150,-90,-150,-120,-120,-60,90,120,60,150,60,-90,-90,150,120,-60,-150,-120,120},
{-150,90,-150,-60,120,-60,90,-90,60,-120,-60,-90,-90,150,90,150,60,150,60,-150,120,120,-120,-120},
{-150,150,90,-60,60,-120,-120,-120,150,90,90,-90,150,-60,120,60,120,-60,-90,-150,-150,120,-90,60},
{120,150,-60,90,-120,-90,-150,-60,-120,-60,90,90,-90,-90,60,60,120,150,150,60,120,-120,-150,-150},
{-150,-120,120,-90,-60,-120,120,150,-60,90,120,-90,-60,-90,90,-120,-150,150,150,90,60,60,60,-150},
{-150,-90,-120,-60,60,150,90,-150,120,-120,150,90,150,-60,60,-90,-120,-60,60,120,-90,120,90,-150},
{60,90,90,-150,-60,150,120,-120,-60,150,-150,120,-90,150,-120,90,-90,60,-60,60,-150,-120,120,-90},
{-120,-150,-60,90,-60,150,-90,150,90,120,60,-150,-150,-90,-120,-60,90,-90,60,120,120,150,-120,60},
{120,150,-90,90,60,-60,150,120,150,-60,-60,60,-90,-120,-150,60,-150,120,-150,-90,90,-120,90,-120},
{60,60,-150,90,-60,150,-90,-90,-90,-150,90,-60,150,-120,90,-120,150,-120,120,-150,120,-60,120,60},
{-150,60,-150,90,150,-60,150,-60,60,-120,90,90,-90,-150,-120,-60,-120,150,60,-90,120,120,120,-90},
{-120,-120,-60,90,150,90,120,-90,-90,-90,-60,-120,60,-150,-150,-150,90,120,-60,120,60,150,60,150},
{-150,-120,120,-60,90,150,60,60,-150,-90,-90,90,150,120,-120,90,-150,-60,120,-60,60,-120,150,-90},
{-90,120,120,120,-60,90,-120,-90,-60,150,90,-120,60,-120,-90,90,150,-150,-150,60,150,-60,-150,60},
{150,60,90,60,-150,150,120,90,-60,-120,-60,-150,-150,-120,-90,90,120,60,-90,150,120,-60,-90,-120},
{-120,60,-120,-90,-60,-60,90,-150,-150,-60,-120,-90,60,150,90,120,120,150,150,90,60,-150,-90,120},
{-150,-90,90,60,120,150,120,150,60,150,-150,-150,-60,-60,120,-120,90,-120,-90,-120,-90,90,60,-60}};

    public static float nearDistance = 2f;

    public static int longBaselineWaypointNumber = 2;
    /*
    

    Home point:
         
    */
}
